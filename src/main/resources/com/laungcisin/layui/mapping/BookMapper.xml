<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.laungcisin.layui.dao.BookMapper">
    <resultMap id="BaseResultMap" type="com.laungcisin.layui.domain.Book">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="book_no" property="bookNo" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="author" property="author" jdbcType="VARCHAR"/>
        <result column="price" property="price" jdbcType="DECIMAL"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, book_no, name, author, price
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from book
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from book
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.laungcisin.layui.domain.Book">
        insert into book (id, book_no, name,
        author, price)
        values (#{id,jdbcType=INTEGER}, #{bookNo,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
        #{author,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL})
    </insert>
    <insert id="insertSelective" parameterType="com.laungcisin.layui.domain.Book">
        insert into book
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="bookNo != null">
                book_no,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="author != null">
                author,
            </if>
            <if test="price != null">
                price,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="bookNo != null">
                #{bookNo,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="author != null">
                #{author,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                #{price,jdbcType=DECIMAL},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.laungcisin.layui.domain.Book">
        update book
        <set>
            <if test="bookNo != null">
                book_no = #{bookNo,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="author != null">
                author = #{author,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=DECIMAL},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.laungcisin.layui.domain.Book">
        update book
        set book_no = #{bookNo,jdbcType=VARCHAR},
        name = #{name,jdbcType=VARCHAR},
        author = #{author,jdbcType=VARCHAR},
        price = #{price,jdbcType=DECIMAL}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <!-- ==============以下内容是根据自身业务扩展的内容======================= -->
    <!-- select标签的id属性与UserMapper接口中定义的getAllUser方法要一模一样 -->
    <select id="getAllBookCount" resultType="java.lang.Integer">
        select count(1) from book
    </select>

    <select id="getBookList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from book where 1 = 1
        <if test="name != null and name!='' ">
            and name like CONCAT('%', #{name}, '%')
        </if>
        <if test="author != null and author!='' ">
            and author like CONCAT('%', #{author}, '%')
        </if>
        order by book_no
        limit #{start}, #{end}
    </select>
</mapper>